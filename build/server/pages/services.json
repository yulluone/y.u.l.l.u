{"pageProps":{"page":{"slug":["services"],"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    em: \"em\",\n    h6: \"h6\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {PageTitle, Sep, Button} = _components;\n  if (!Button) _missingMdxReference(\"Button\", true);\n  if (!PageTitle) _missingMdxReference(\"PageTitle\", true);\n  if (!Sep) _missingMdxReference(\"Sep\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"---main\"\n    }), _jsxs(PageTitle, {\n      children: [_jsx(_components.h3, {\n        children: \"Services\"\n      }), _jsx(_components.h3, {\n        children: _jsx(_components.em, {\n          children: \"My Expertise\"\n        })\n      })]\n    }), _jsx(_components.h6, {\n      children: \"Solving problems\"\n    }), _jsx(_components.p, {\n      children: \"I build products that are more than pretty. I make them shippable and usable. The goal is to enhance your business operations not change them.\"\n    }), _jsx(_components.h6, {\n      children: \"What you can expect\"\n    }), _jsxs(_components.ul, {\n      children: [_jsx(_components.li, {\n        children: \"Design Strategy\"\n      }), _jsx(_components.li, {\n        children: \"Web App Design\"\n      }), _jsx(_components.li, {\n        children: \"Front-end\"\n      }), _jsx(_components.li, {\n        children: \"Back-end Development\"\n      }), _jsx(_components.li, {\n        children: \"SEO Optimization\"\n      })]\n    }), _jsx(_components.h6, {\n      children: \"Applications I'm fluent in\"\n    }), _jsxs(_components.ul, {\n      children: [_jsx(_components.li, {\n        children: \"Themed Business Websites\"\n      }), _jsx(_components.li, {\n        children: \"E-Commerce Web Apps\"\n      }), _jsx(_components.li, {\n        children: \"Administration Dashboards\"\n      })]\n    }), _jsx(Sep, {\n      size: \"12\"\n    }), _jsx(Button, {\n      href: \"/contact\",\n      variant: \"white\",\n      size: \"sm\",\n      children: _jsx(_components.p, {\n        children: \"Get Free Price Quote\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"path":"/blog"}},"meta":{"layout":"Services","seo":{"title":"Web Development Services","description":"What I can do for your brand and business"}},"services":[{"title":"Web App Design","icon":null,"src":"/icons/mobile-app.svg","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(\"small\", {\n    children: [_jsx(_components.p, {\n      children: \"Defining the problem, analyse your business and brand and create design just for you.\"\n    }), _jsxs(_components.ul, {\n      children: [_jsx(_components.li, {\n        children: _jsx(\"strong\", {\n          children: \"Design Strategy\"\n        })\n      }), _jsx(_components.li, {\n        children: _jsx(\"strong\", {\n          children: \"Web App Design\"\n        })\n      }), _jsx(_components.li, {\n        children: _jsx(\"strong\", {\n          children: \"Front-end Development\"\n        })\n      }), _jsx(_components.li, {\n        children: _jsx(\"strong\", {\n          children: \"Back-end Development\"\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},{"title":"Project Strategy & Development","icon":null,"src":"/icons/prisma.svg","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(\"small\", {\n    children: [_jsx(_components.p, {\n      children: \"Identifying the scope and create a roadmap for the project development and implementation. Its essential to me that this process is smooth and painless.\"\n    }), _jsxs(_components.ul, {\n      children: [_jsx(_components.li, {\n        children: _jsx(\"strong\", {\n          children: \"Project Planning\"\n        })\n      }), _jsx(_components.li, {\n        children: _jsx(\"strong\", {\n          children: \"Constant Communication\"\n        })\n      }), _jsx(_components.li, {\n        children: _jsx(\"strong\", {\n          children: \"100% Transparency\"\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},{"title":"UI/UX Design & Optimization","icon":null,"src":"/icons/dashboard.svg","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(\"small\", {\n    children: [_jsx(_components.p, {\n      children: \"The goal is to make the users feel at home. Everything should feel natural like its where it should be. An experience with nothing to experience.\"\n    }), _jsxs(_components.ul, {\n      children: [_jsx(_components.li, {\n        children: _jsx(\"strong\", {\n          children: \"User Centric Design\"\n        })\n      }), _jsx(_components.li, {\n        children: _jsx(\"strong\", {\n          children: \"Minialistic Design\"\n        })\n      }), _jsx(_components.li, {\n        children: _jsx(\"strong\", {\n          children: \"Thorough Testing\"\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},{"title":"Application Audit & Debugging","icon":null,"src":"/icons/audit.svg","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(\"small\", {\n    children: [_jsx(_components.p, {\n      children: \"Test the idea, test the plan, test the code and Test the product. Test, test, test then test some more.\"\n    }), _jsx(_components.ul, {\n      children: _jsx(_components.li, {\n        children: _jsx(\"strong\", {\n          children: \"Test driven design and development\"\n        })\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}]}},"__N_SSG":true}